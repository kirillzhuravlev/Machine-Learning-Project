training<-read.csv("pml-training.csv", sep=",")
x<-as.data.frame(is.na(training)==FALSE)
head(x)
head(training)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-as.data.frame(is.na(training)==FALSE)
data1<-training(x)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-as.data.frame(is.na(training)==FALSE)
data1<-training[x]
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-as.data.frame(is.na(training)==FALSE)
data1<-training[,x]
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-function(y){is.na(y)==FALSE}
z<-apply(training, x)
?apply
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-function(y){is.na(y)==FALSE}
z<-apply(training, 2, x)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-function(y){is.na(y)==FALSE}
z<-sapply(training, 2, x)
?sapply
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-function(y){is.na(y)==FALSE}
z<-sapply(training, x)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
data1<-sapply(training, function(x,y){x[,is.na(x)==FALSE] } )
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
data1<-sapply(training, function(x,y){x[,is.na(y)==FALSE] } )
?for
)
?for
)
??loopr
?loops
??loops
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
data1<-sapply(training, function(x){for i in 1 to ncol(x) x[,is.na(x[,i])==FALSE] } )
??for
loop
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
data1<-sapply(training, function(x){for (i in 1:ncol(x)) x[,is.na(x[,i])==FALSE] } )
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
data1<-ddply(training, .,colwise(is.na))
data1<-ddply(training, .,colwise(is.na()))
data1<-ddply(training, .,colwise(sum))
data1<-ddply(training, .(),colwise(sum))
data1<-ddply(training, .,colwise(is.na))
?ddply
data1<-(training, .names(training), is.na)
data1<-ddply(training, .names(training), is.na)
data1<-ddply(training, .training[1,], is.na)
data1<-ddply(training, training[1,], is.na)
data1<-ddply(training, .(names(training)), is.na)
data1
head(data1)
data2<-training(data1)
data2<-training[data1]
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-sapply(training, 2, sum)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
x<-apply(training, 2, sum)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
y<-function(x){sum(is.na(x))==0}
data1<-apply(training, 2, y)
head(data1)
?apply
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
y<-function(x){sum(is.na(x))==0}
y(training$total_accel_belt)
y(training$kurtosis_roll_arm)
head(training)
y(training$min_pitch_belt)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
y<-function(x){sum(is.na(x))==0}
data1<-sapply(training, y)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
y<-function(x){sum(is.na(x))==0}
data1<-sapply(training, y)
data2<-training[,data1]
head(data2)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
training<-training[,-(1:7)]
y<-function(x){sum(is.na(x))==0}
z<-sapply(training, y)
data1<-training[,z]
head(data1)
sum(data1$amplitude_yaw_forearm)
sum(as.numeric(data1$amplitude_yaw_forearm))
data1$amplitude_yaw_forearm
sum(as.integer(data1$amplitude_yaw_forearm))
head(data1)
head(data1,500)
?length
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
training<-training[,-(1:7)]
y<-function(x){sum(is.na(x))==0}
z<-sapply(training, y)
data1<-training[,z]
y<-function(x){sum(is.numeric(x))==length(x)}
y(data1$kurtosis_picth_belt)
y(data1$total_accel_dumbbell)
y(data1$total_accel_forearm)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
training<-training[,-(1:7)]
y<-function(x){sum(is.na(x))==0}
z<-sapply(training, y)
data1<-training[,z]
y<-function(x){sum(is.integer(x))==length(x)}
y(data1$total_accel_forearm)
y(data1$kurtosis_picth_belt)
z<-is.numeric(data1$kurtosis_roll_arm)
z
z<-is.numeric(data1$total_accel_dumbbell)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
training<-training[,-(1:7)]
y<-function(x){sum(is.na(x))==0}
z<-sapply(training, y)
data1<-training[,z]
y<-function(x){is.numeric(x)}
data1<-data1[,sapply(data1,y)]
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
training<-training[,-(1:7)]
y<-function(x){sum(is.na(x))==0}
z<-sapply(training, y)
data1<-training[,z]
y<-function(x){is.numeric(x)}
data1<-data1[,sapply(data1[,-ncol(data1)],y)]
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
training<-training[,-(1:7)]
y<-function(x){sum(is.na(x))==0}
z<-sapply(training, y)
data1<-training[,z]
y<-function(x){is.numeric(x)}
data1<-data1[,sapply(data1[,-ncol(data1)],y)]
data1_pca<-prcomp(training[,-ncol(training)], center=TRUE, scale=TRUE)
summary (data1_pca)
library(ggplot2)
library(kernlab)
library(caret)
library(randomForest)
library(devtools)
library(plyr)
#function writes the content of vector x into text files
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#reading the training set
training<-read.csv("pml-training.csv", sep=",")
training<-training[,-(1:7)]
y<-function(x){sum(is.na(x))==0}
z<-sapply(training, y)
data1<-training[,z]
y<-function(x){is.numeric(x)}
data1<-data1[,sapply(data1[,-ncol(data1)],y)]
data1_pca<-prcomp(data1[,-ncol(data1)], center=TRUE, scale=TRUE)
summary (data1_pca)
